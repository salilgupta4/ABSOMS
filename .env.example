# ABS OMS Environment Configuration Template
# Copy this file to .env and update with your actual values

# ========================================
# DATABASE CONFIGURATION
# ========================================

# MySQL Database Connection
DB_HOST=localhost
DB_PORT=3306
DB_USER=abs_oms_user
DB_PASSWORD=your_secure_password_here
DB_NAME=abs_oms

# Connection Pool Settings
DB_CONNECTION_LIMIT=20
DB_ACQUIRE_TIMEOUT=60000
DB_TIMEOUT=60000

# ========================================
# JWT AUTHENTICATION
# ========================================

# JWT Secret Key (MUST be at least 32 characters in production)
JWT_SECRET=your-super-secure-jwt-secret-key-change-in-production-minimum-32-characters
JWT_EXPIRES_IN=24h

# ========================================
# APPLICATION CONFIGURATION
# ========================================

# Environment (development, staging, production)
NODE_ENV=development

# Server Port
PORT=3000

# API Base URL
API_BASE_URL=http://localhost:3000/api

# Frontend URL (for CORS)
FRONTEND_URL=http://localhost:3000

# ========================================
# EMAIL CONFIGURATION (Optional)
# ========================================

# SMTP Configuration for email notifications
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-specific-password

# Email Settings
FROM_EMAIL=noreply@yourcompany.com
FROM_NAME=ABS OMS System

# ========================================
# FILE UPLOAD CONFIGURATION
# ========================================

# Upload Directory
UPLOAD_DIR=uploads
MAX_FILE_SIZE=10485760  # 10MB in bytes

# Allowed File Types
ALLOWED_EXTENSIONS=pdf,jpg,jpeg,png,doc,docx,xls,xlsx

# ========================================
# SECURITY SETTINGS
# ========================================

# Session Configuration
SESSION_TIMEOUT=24h
MAX_LOGIN_ATTEMPTS=5
LOCKOUT_DURATION=15m

# CORS Settings
CORS_ORIGIN=http://localhost:3000
CORS_CREDENTIALS=true

# Rate Limiting
RATE_LIMIT_WINDOW=15m
RATE_LIMIT_MAX_REQUESTS=1000

# ========================================
# LOGGING CONFIGURATION
# ========================================

# Log Level (error, warn, info, debug)
LOG_LEVEL=info

# Log File Path
LOG_FILE=logs/app.log

# Enable Query Logging (development only)
LOG_QUERIES=true

# ========================================
# BACKUP CONFIGURATION
# ========================================

# Backup Directory
BACKUP_DIR=backups

# Backup Retention (days)
BACKUP_RETENTION_DAYS=30

# Automatic Backup Schedule (cron format)
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM

# ========================================
# EXTERNAL SERVICES
# ========================================

# WhatsApp API (if using external service)
WHATSAPP_API_URL=
WHATSAPP_API_TOKEN=

# SMS Service (optional)
SMS_API_URL=
SMS_API_KEY=

# PDF Generation Service (if external)
PDF_SERVICE_URL=

# ========================================
# MONITORING AND ANALYTICS
# ========================================

# Error Tracking (Sentry, etc.)
SENTRY_DSN=

# Analytics
GOOGLE_ANALYTICS_ID=

# Health Check Endpoints
ENABLE_HEALTH_CHECKS=true
HEALTH_CHECK_PATH=/health

# ========================================
# DEVELOPMENT SETTINGS
# ========================================

# Enable Debug Mode
DEBUG=false

# Enable Hot Reload
HOT_RELOAD=true

# Mock External Services
MOCK_EXTERNAL_SERVICES=false

# Seed Database with Test Data
SEED_TEST_DATA=false

# ========================================
# PRODUCTION SETTINGS
# ========================================

# SSL Configuration (production only)
SSL_CERT_PATH=
SSL_KEY_PATH=

# Cluster Mode
CLUSTER_WORKERS=auto

# Process Management
PM2_NAME=abs-oms
PM2_INSTANCES=max

# Compression
ENABLE_GZIP=true

# Static File Caching (seconds)
STATIC_CACHE_TTL=86400

# ========================================
# IMPORTANT SECURITY NOTES
# ========================================

# 1. NEVER commit the actual .env file to version control
# 2. Use strong, unique passwords for database access
# 3. Generate secure JWT secrets (use crypto.randomBytes(32).toString('hex'))
# 4. Enable SSL/TLS in production
# 5. Regularly rotate JWT secrets and database passwords
# 6. Use environment-specific configurations
# 7. Monitor logs for suspicious activities
# 8. Keep all dependencies updated
# 9. Use firewall rules to restrict database access
# 10. Enable audit logging for compliance